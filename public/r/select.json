{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "select",
  "type": "registry:block",
  "title": "Select",
  "description": "Displays a list of options for the user to pick fromâ€”triggered by a button.",
  "files": [
    {
      "path": "src/registry/select.tsx",
      "content": "'use client';\n\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from 'lucide-react';\nimport { Select } from '@base-ui-components/react/select';\nimport { cn } from '@/lib/utils';\nimport * as React from 'react';\n\nfunction SelectRoot({ ...props }: React.ComponentProps<typeof Select.Root>) {\n\treturn <Select.Root data-slot=\"select\" {...props} />;\n}\n\nfunction SelectGroup({ ...props }: React.ComponentProps<typeof Select.Group>) {\n\treturn <Select.Group data-slot=\"select-group\" {...props} />;\n}\n\nfunction SelectValue({ ...props }: React.ComponentProps<typeof Select.Value>) {\n\treturn <Select.Value data-slot=\"select-value\" {...props} />;\n}\n\nfunction SelectTrigger({\n\tclassName,\n\tsize = 'default',\n\tchildren,\n\t...props\n}: React.ComponentProps<typeof Select.Trigger> & {\n\tsize?: 'sm' | 'default';\n}) {\n\treturn (\n\t\t<Select.Trigger\n\t\t\tdata-slot=\"select-trigger\"\n\t\t\tdata-size={size}\n\t\t\tclassName={cn(\n\t\t\t\t\"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t\t<Select.Icon>\n\t\t\t\t<ChevronDownIcon className=\"size-4 opacity-50\" />\n\t\t\t</Select.Icon>\n\t\t</Select.Trigger>\n\t);\n}\n\nfunction SelectContent({\n\tclassName,\n\tchildren,\n\tposition = 'popper',\n\t...props\n}: React.ComponentProps<typeof Select.Popup> & {\n\tposition?: 'popper' | 'item';\n}) {\n\treturn (\n\t\t<Select.Portal>\n\t\t\t<Select.Positioner>\n\t\t\t\t<Select.ScrollUpArrow>\n\t\t\t\t\t<ChevronUpIcon className=\"size-4\" />\n\t\t\t\t</Select.ScrollUpArrow>\n\t\t\t\t<Select.Popup\n\t\t\t\t\tdata-slot=\"select-content\"\n\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t'bg-popover text-popover-foreground data-[open]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[open]:fade-in-0 data-[closed]:zoom-out-95 data-[open]:zoom-in-95 data-[open]:duration-200 data-[closed]:duration-150 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border shadow-md',\n\t\t\t\t\t\tposition === 'popper' && 'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n\t\t\t\t\t\tclassName\n\t\t\t\t\t)}\n\t\t\t\t\t{...props}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</Select.Popup>\n\t\t\t\t<Select.ScrollDownArrow>\n\t\t\t\t\t<ChevronDownIcon className=\"size-4\" />\n\t\t\t\t</Select.ScrollDownArrow>\n\t\t\t</Select.Positioner>\n\t\t</Select.Portal>\n\t);\n}\n\nfunction SelectLabel({ className, ...props }: React.ComponentProps<typeof Select.GroupLabel>) {\n\treturn <Select.GroupLabel data-slot=\"select-label\" className={cn('text-muted-foreground px-2 py-1.5 text-xs', className)} {...props} />;\n}\n\nfunction SelectItem({ className, children, ...props }: React.ComponentProps<typeof Select.Item>) {\n\treturn (\n\t\t<Select.Item\n\t\t\tdata-slot=\"select-item\"\n\t\t\tclassName={cn(\n\t\t\t\t\"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...props}\n\t\t>\n\t\t\t<Select.ItemIndicator className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n\t\t\t\t<CheckIcon className=\"size-4\" />\n\t\t\t</Select.ItemIndicator>\n\t\t\t<Select.ItemText>{children}</Select.ItemText>\n\t\t</Select.Item>\n\t);\n}\n\nfunction SelectSeparator({ className, ...props }: React.ComponentProps<typeof Select.Separator>) {\n\treturn <Select.Separator data-slot=\"select-separator\" className={cn('bg-border pointer-events-none -mx-1 my-1 h-px', className)} {...props} />;\n}\n\nfunction SelectScrollUpButton({ className, ...props }: React.ComponentProps<typeof Select.ScrollUpArrow>) {\n\treturn (\n\t\t<Select.ScrollUpArrow data-slot=\"select-scroll-up-button\" className={cn('flex cursor-default items-center justify-center py-1', className)} {...props}>\n\t\t\t<ChevronUpIcon className=\"size-4\" />\n\t\t</Select.ScrollUpArrow>\n\t);\n}\n\nfunction SelectScrollDownButton({ className, ...props }: React.ComponentProps<typeof Select.ScrollDownArrow>) {\n\treturn (\n\t\t<Select.ScrollDownArrow data-slot=\"select-scroll-down-button\" className={cn('flex cursor-default items-center justify-center py-1', className)} {...props}>\n\t\t\t<ChevronDownIcon className=\"size-4\" />\n\t\t</Select.ScrollDownArrow>\n\t);\n}\n\nfunction SelectIcon({ className, ...props }: React.ComponentProps<typeof Select.Icon>) {\n\treturn <Select.Icon data-slot=\"select-icon\" className={cn('opacity-50', className)} {...props} />;\n}\n\nfunction SelectArrow({ className, ...props }: React.ComponentProps<typeof Select.Arrow>) {\n\treturn <Select.Arrow data-slot=\"select-arrow\" className={cn('fill-popover', className)} {...props} />;\n}\n\nexport {\n\tSelectRoot as Select,\n\tSelectContent,\n\tSelectGroup,\n\tSelectItem,\n\tSelectLabel,\n\tSelectScrollDownButton,\n\tSelectScrollUpButton,\n\tSelectSeparator,\n\tSelectTrigger,\n\tSelectValue,\n\tSelectIcon,\n\tSelectArrow\n};\n",
      "type": "registry:component"
    }
  ]
}