{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dropdown-menu",
  "type": "registry:block",
  "title": "Dropdown Menu",
  "description": "Displays a menu to the user — such as a set of actions or functions — triggered by a button.",
  "files": [
    {
      "path": "src/registry/dropdown-menu.tsx",
      "content": "'use client';\r\n\r\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from 'lucide-react';\r\nimport { Menu } from '@base-ui-components/react/menu';\r\nimport { cn } from '@/lib/utils';\r\nimport * as React from 'react';\r\n\r\nfunction DropdownMenu({ ...props }: React.ComponentProps<typeof Menu.Root>) {\r\n\treturn <Menu.Root data-slot=\"dropdown-menu\" {...props} />;\r\n}\r\n\r\nfunction DropdownMenuPortal({ ...props }: React.ComponentProps<typeof Menu.Portal>) {\r\n\treturn <Menu.Portal data-slot=\"dropdown-menu-portal\" {...props} />;\r\n}\r\n\r\nfunction DropdownMenuTrigger({ ...props }: React.ComponentProps<typeof Menu.Trigger>) {\r\n\treturn <Menu.Trigger data-slot=\"dropdown-menu-trigger\" {...props} />;\r\n}\r\n\r\nfunction DropdownMenuContent({ className, sideOffset = 4, ...props }: React.ComponentProps<typeof Menu.Popup> & { sideOffset?: number }) {\r\n\treturn (\r\n\t\t<DropdownMenuPortal>\r\n\t\t\t<Menu.Positioner sideOffset={sideOffset}>\r\n\t\t\t\t<Menu.Popup\r\n\t\t\t\t\tdata-slot=\"dropdown-menu-content\"\r\n\t\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\t'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 max-h-(--radix-dropdown-menu-content-available-height) min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border p-1 shadow-md',\r\n\t\t\t\t\t\tclassName\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</Menu.Positioner>\r\n\t\t</DropdownMenuPortal>\r\n\t);\r\n}\r\n\r\nfunction DropdownMenuGroup({ ...props }: React.ComponentProps<typeof Menu.Group>) {\r\n\treturn <Menu.Group data-slot=\"dropdown-menu-group\" {...props} />;\r\n}\r\n\r\nfunction DropdownMenuItem({\r\n\tclassName,\r\n\tinset,\r\n\tvariant = 'default',\r\n\t...props\r\n}: React.ComponentProps<typeof Menu.Item> & {\r\n\tinset?: boolean;\r\n\tvariant?: 'default' | 'destructive';\r\n}) {\r\n\treturn (\r\n\t\t<Menu.Item\r\n\t\t\tdata-slot=\"dropdown-menu-item\"\r\n\t\t\tdata-inset={inset}\r\n\t\t\tdata-variant={variant}\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction DropdownMenuCheckboxItem({ className, children, checked, ...props }: React.ComponentProps<typeof Menu.CheckboxItem>) {\r\n\treturn (\r\n\t\t<Menu.CheckboxItem\r\n\t\t\tdata-slot=\"dropdown-menu-checkbox-item\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName\r\n\t\t\t)}\r\n\t\t\tchecked={checked}\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">{checked && <CheckIcon className=\"size-4\" />}</span>\r\n\t\t\t{children}\r\n\t\t</Menu.CheckboxItem>\r\n\t);\r\n}\r\n\r\nfunction DropdownMenuRadioGroup({ ...props }: React.ComponentProps<typeof Menu.RadioGroup>) {\r\n\treturn <Menu.RadioGroup data-slot=\"dropdown-menu-radio-group\" {...props} />;\r\n}\r\n\r\nfunction DropdownMenuRadioItem({ className, children, ...props }: React.ComponentProps<typeof Menu.RadioItem>) {\r\n\treturn (\r\n\t\t<Menu.RadioItem\r\n\t\t\tdata-slot=\"dropdown-menu-radio-item\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-sm py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\r\n\t\t\t\t<CircleIcon className=\"size-2 fill-current\" />\r\n\t\t\t</span>\r\n\t\t\t{children}\r\n\t\t</Menu.RadioItem>\r\n\t);\r\n}\r\n\r\nfunction DropdownMenuLabel({\r\n\tclassName,\r\n\tinset,\r\n\t...props\r\n}: React.ComponentProps<typeof Menu.GroupLabel> & {\r\n\tinset?: boolean;\r\n}) {\r\n\treturn <Menu.GroupLabel data-slot=\"dropdown-menu-label\" data-inset={inset} className={cn('px-2 py-1.5 text-sm font-medium data-[inset]:pl-8', className)} {...props} />;\r\n}\r\n\r\nfunction DropdownMenuSeparator({ className, ...props }: React.ComponentProps<typeof Menu.Separator>) {\r\n\treturn <Menu.Separator data-slot=\"dropdown-menu-separator\" className={cn('bg-border -mx-1 my-1 h-px', className)} {...props} />;\r\n}\r\n\r\nfunction DropdownMenuShortcut({ className, ...props }: React.ComponentProps<'span'>) {\r\n\treturn <span data-slot=\"dropdown-menu-shortcut\" className={cn('text-muted-foreground ml-auto text-xs tracking-widest', className)} {...props} />;\r\n}\r\n\r\nfunction DropdownMenuSub({ ...props }: React.ComponentProps<typeof Menu.SubmenuTrigger>) {\r\n\treturn <Menu.SubmenuTrigger data-slot=\"dropdown-menu-sub\" {...props} />;\r\n}\r\n\r\nfunction DropdownMenuSubTrigger({\r\n\tclassName,\r\n\tinset,\r\n\tchildren,\r\n\t...props\r\n}: React.ComponentProps<typeof Menu.SubmenuTrigger> & {\r\n\tinset?: boolean;\r\n}) {\r\n\treturn (\r\n\t\t<Menu.SubmenuTrigger\r\n\t\t\tdata-slot=\"dropdown-menu-sub-trigger\"\r\n\t\t\tdata-inset={inset}\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[inset]:pl-8',\r\n\t\t\t\tclassName\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t\t<ChevronRightIcon className=\"ml-auto size-4\" />\r\n\t\t</Menu.SubmenuTrigger>\r\n\t);\r\n}\r\n\r\nfunction DropdownMenuSubContent({ className, ...props }: React.ComponentProps<typeof Menu.Popup>) {\r\n\treturn (\r\n\t\t<Menu.Positioner>\r\n\t\t\t<Menu.Popup\r\n\t\t\t\tdata-slot=\"dropdown-menu-sub-content\"\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-dropdown-menu-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg',\r\n\t\t\t\t\tclassName\r\n\t\t\t\t)}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t</Menu.Positioner>\r\n\t);\r\n}\r\n\r\nexport {\r\n\tDropdownMenu,\r\n\tDropdownMenuPortal,\r\n\tDropdownMenuTrigger,\r\n\tDropdownMenuContent,\r\n\tDropdownMenuGroup,\r\n\tDropdownMenuLabel,\r\n\tDropdownMenuItem,\r\n\tDropdownMenuCheckboxItem,\r\n\tDropdownMenuRadioGroup,\r\n\tDropdownMenuRadioItem,\r\n\tDropdownMenuSeparator,\r\n\tDropdownMenuShortcut,\r\n\tDropdownMenuSub,\r\n\tDropdownMenuSubTrigger,\r\n\tDropdownMenuSubContent\r\n};\r\n",
      "type": "registry:component"
    }
  ]
}