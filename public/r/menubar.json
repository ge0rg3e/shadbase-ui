{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "menubar",
  "type": "registry:block",
  "title": "Menubar",
  "description": "A visually persistent menu common in desktop applications that provides quick access to a consistent set of commands.",
  "files": [
    {
      "path": "src/registry/menubar.tsx",
      "content": "'use client';\r\n\r\nimport { CheckIcon, ChevronRightIcon, CircleIcon } from 'lucide-react';\r\nimport { Menubar } from '@base-ui-components/react/menubar';\r\nimport { Menu } from '@base-ui-components/react/menu';\r\nimport { cn } from '@/lib/utils';\r\nimport * as React from 'react';\r\n\r\nfunction MenubarRoot({ className, ...props }: React.ComponentProps<typeof Menubar>) {\r\n\treturn <Menubar data-slot=\"menubar\" className={cn('bg-background flex h-9 items-center gap-1 rounded-md border p-1 shadow-xs', className)} {...props} />;\r\n}\r\n\r\nfunction MenubarMenu({ ...props }: React.ComponentProps<typeof Menu.Root>) {\r\n\treturn <Menu.Root data-slot=\"menubar-menu\" {...props} />;\r\n}\r\n\r\nfunction MenubarGroup({ ...props }: React.ComponentProps<typeof Menu.Group>) {\r\n\treturn <Menu.Group data-slot=\"menubar-group\" {...props} />;\r\n}\r\n\r\nfunction MenubarPortal({ ...props }: React.ComponentProps<typeof Menu.Portal>) {\r\n\treturn <Menu.Portal data-slot=\"menubar-portal\" {...props} />;\r\n}\r\n\r\nfunction MenubarRadioGroup({ ...props }: React.ComponentProps<typeof Menu.RadioGroup>) {\r\n\treturn <Menu.RadioGroup data-slot=\"menubar-radio-group\" {...props} />;\r\n}\r\n\r\nfunction MenubarTrigger({ className, ...props }: React.ComponentProps<typeof Menu.Trigger>) {\r\n\treturn (\r\n\t\t<Menu.Trigger\r\n\t\t\tdata-slot=\"menubar-trigger\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'focus:bg-accent focus:text-accent-foreground data-[open]:bg-accent data-[open]:text-accent-foreground flex items-center rounded-sm px-2 py-1 text-sm font-medium outline-hidden select-none',\r\n\t\t\t\tclassName\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction MenubarContent({\r\n\tclassName,\r\n\talign = 'start',\r\n\talignOffset = -4,\r\n\tsideOffset = 8,\r\n\t...props\r\n}: React.ComponentProps<typeof Menu.Popup> & { align?: string; alignOffset?: number; sideOffset?: number }) {\r\n\treturn (\r\n\t\t<MenubarPortal>\r\n\t\t\t<Menu.Positioner align={align as any} alignOffset={alignOffset} sideOffset={sideOffset}>\r\n\t\t\t\t<Menu.Popup\r\n\t\t\t\t\tdata-slot=\"menubar-content\"\r\n\t\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\t'bg-popover text-popover-foreground data-[open]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[open]:fade-in-0 data-[closed]:zoom-out-95 data-[open]:zoom-in-95 data-[open]:duration-200 data-[closed]:duration-150 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[12rem] origin-(--radix-menubar-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-md',\r\n\t\t\t\t\t\tclassName\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</Menu.Positioner>\r\n\t\t</MenubarPortal>\r\n\t);\r\n}\r\n\r\nfunction MenubarItem({\r\n\tclassName,\r\n\tinset,\r\n\tvariant = 'default',\r\n\t...props\r\n}: React.ComponentProps<typeof Menu.Item> & {\r\n\tinset?: boolean;\r\n\tvariant?: 'default' | 'destructive';\r\n}) {\r\n\treturn (\r\n\t\t<Menu.Item\r\n\t\t\tdata-slot=\"menubar-item\"\r\n\t\t\tdata-inset={inset}\r\n\t\t\tdata-variant={variant}\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"focus:bg-accent focus:text-accent-foreground data-[variant=destructive]:text-destructive data-[variant=destructive]:focus:bg-destructive/10 dark:data-[variant=destructive]:focus:bg-destructive/20 data-[variant=destructive]:focus:text-destructive data-[variant=destructive]:*:[svg]:!text-destructive [&_svg:not([class*='text-'])]:text-muted-foreground relative flex cursor-default items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 data-[inset]:pl-8 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction MenubarCheckboxItem({ className, children, checked, ...props }: React.ComponentProps<typeof Menu.CheckboxItem>) {\r\n\treturn (\r\n\t\t<Menu.CheckboxItem\r\n\t\t\tdata-slot=\"menubar-checkbox-item\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-xs py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName\r\n\t\t\t)}\r\n\t\t\tchecked={checked}\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">{checked && <CheckIcon className=\"size-4\" />}</span>\r\n\t\t\t{children}\r\n\t\t</Menu.CheckboxItem>\r\n\t);\r\n}\r\n\r\nfunction MenubarRadioItem({ className, children, ...props }: React.ComponentProps<typeof Menu.RadioItem>) {\r\n\treturn (\r\n\t\t<Menu.RadioItem\r\n\t\t\tdata-slot=\"menubar-radio-item\"\r\n\t\t\tclassName={cn(\r\n\t\t\t\t\"focus:bg-accent focus:text-accent-foreground relative flex cursor-default items-center gap-2 rounded-xs py-1.5 pr-2 pl-8 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n\t\t\t\tclassName\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t<span className=\"pointer-events-none absolute left-2 flex size-3.5 items-center justify-center\">\r\n\t\t\t\t<CircleIcon className=\"size-2 fill-current\" />\r\n\t\t\t</span>\r\n\t\t\t{children}\r\n\t\t</Menu.RadioItem>\r\n\t);\r\n}\r\n\r\nfunction MenubarLabel({\r\n\tclassName,\r\n\tinset,\r\n\t...props\r\n}: React.ComponentProps<typeof Menu.GroupLabel> & {\r\n\tinset?: boolean;\r\n}) {\r\n\treturn <Menu.GroupLabel data-slot=\"menubar-label\" data-inset={inset} className={cn('px-2 py-1.5 text-sm font-medium data-[inset]:pl-8', className)} {...props} />;\r\n}\r\n\r\nfunction MenubarSeparator({ className, ...props }: React.ComponentProps<typeof Menu.Separator>) {\r\n\treturn <Menu.Separator data-slot=\"menubar-separator\" className={cn('bg-border -mx-1 my-1 h-px', className)} {...props} />;\r\n}\r\n\r\nfunction MenubarShortcut({ className, ...props }: React.ComponentProps<'span'>) {\r\n\treturn <span data-slot=\"menubar-shortcut\" className={cn('text-muted-foreground ml-auto text-xs tracking-widest', className)} {...props} />;\r\n}\r\n\r\nfunction MenubarSub({ children, ...props }: React.ComponentProps<typeof Menu.SubmenuTrigger>) {\r\n\treturn (\r\n\t\t<Menu.Root data-slot=\"menubar-sub\" {...props}>\r\n\t\t\t{children}\r\n\t\t</Menu.Root>\r\n\t);\r\n}\r\n\r\nfunction MenubarSubTrigger({\r\n\tclassName,\r\n\tinset,\r\n\tchildren,\r\n\t...props\r\n}: React.ComponentProps<typeof Menu.SubmenuTrigger> & {\r\n\tinset?: boolean;\r\n}) {\r\n\treturn (\r\n\t\t<Menu.SubmenuTrigger\r\n\t\t\tdata-slot=\"menubar-sub-trigger\"\r\n\t\t\tdata-inset={inset}\r\n\t\t\tclassName={cn(\r\n\t\t\t\t'focus:bg-accent focus:text-accent-foreground data-[open]:bg-accent data-[open]:text-accent-foreground flex cursor-default items-center rounded-sm px-2 py-1.5 text-sm outline-none select-none data-[inset]:pl-8',\r\n\t\t\t\tclassName\r\n\t\t\t)}\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t\t<ChevronRightIcon className=\"ml-auto h-4 w-4\" />\r\n\t\t</Menu.SubmenuTrigger>\r\n\t);\r\n}\r\n\r\nfunction MenubarSubContent({ className, ...props }: React.ComponentProps<typeof Menu.Popup>) {\r\n\treturn (\r\n\t\t<MenubarPortal>\r\n\t\t\t<Menu.Positioner>\r\n\t\t\t\t<Menu.Popup\r\n\t\t\t\t\tdata-slot=\"menubar-sub-content\"\r\n\t\t\t\t\tclassName={cn(\r\n\t\t\t\t\t\t'bg-popover text-popover-foreground data-[open]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[open]:fade-in-0 data-[closed]:zoom-out-95 data-[open]:zoom-in-95 data-[open]:duration-200 data-[closed]:duration-150 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 z-50 min-w-[8rem] origin-(--radix-menubar-content-transform-origin) overflow-hidden rounded-md border p-1 shadow-lg',\r\n\t\t\t\t\t\tclassName\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{...props}\r\n\t\t\t\t/>\r\n\t\t\t</Menu.Positioner>\r\n\t\t</MenubarPortal>\r\n\t);\r\n}\r\n\r\nexport {\r\n\tMenubarRoot as Menubar,\r\n\tMenubarPortal,\r\n\tMenubarMenu,\r\n\tMenubarTrigger,\r\n\tMenubarContent,\r\n\tMenubarGroup,\r\n\tMenubarSeparator,\r\n\tMenubarLabel,\r\n\tMenubarItem,\r\n\tMenubarShortcut,\r\n\tMenubarCheckboxItem,\r\n\tMenubarRadioGroup,\r\n\tMenubarRadioItem,\r\n\tMenubarSub,\r\n\tMenubarSubTrigger,\r\n\tMenubarSubContent\r\n};\r\n",
      "type": "registry:component"
    }
  ]
}