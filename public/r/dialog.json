{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "dialog",
  "type": "registry:block",
  "title": "Dialog",
  "description": "A window overlaid on either the primary window or another dialog window, rendering the content underneath inert.",
  "files": [
    {
      "path": "src/registry/dialog.tsx",
      "content": "'use client';\r\n\r\nimport { Dialog } from '@base-ui-components/react/dialog';\r\nimport { XIcon } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\nimport * as React from 'react';\r\n\r\nfunction DialogRoot({ ...props }: React.ComponentProps<typeof Dialog.Root>) {\r\n\treturn <Dialog.Root data-slot=\"dialog\" {...props} />;\r\n}\r\n\r\nfunction DialogTrigger({ ...props }: React.ComponentProps<typeof Dialog.Trigger>) {\r\n\treturn <Dialog.Trigger data-slot=\"dialog-trigger\" {...props} />;\r\n}\r\n\r\nfunction DialogPortal({ ...props }: React.ComponentProps<typeof Dialog.Portal>) {\r\n\treturn <Dialog.Portal data-slot=\"dialog-portal\" {...props} />;\r\n}\r\n\r\nfunction DialogClose({ ...props }: React.ComponentProps<typeof Dialog.Close>) {\r\n\treturn <Dialog.Close data-slot=\"dialog-close\" {...props} />;\r\n}\r\n\r\nfunction DialogBackdrop({ className, ...props }: React.ComponentProps<typeof Dialog.Backdrop>) {\r\n\treturn (\r\n\t\t<Dialog.Backdrop\r\n\t\t\tdata-slot=\"dialog-backdrop\"\r\n\t\t\tclassName={cn('data-[open]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[open]:fade-in-0 fixed inset-0 z-50 bg-black/50', className)}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nfunction DialogContent({\r\n\tclassName,\r\n\tchildren,\r\n\tshowCloseButton = true,\r\n\t...props\r\n}: React.ComponentProps<typeof Dialog.Popup> & {\r\n\tshowCloseButton?: boolean;\r\n}) {\r\n\treturn (\r\n\t\t<DialogPortal data-slot=\"dialog-portal\" keepMounted>\r\n\t\t\t<DialogBackdrop />\r\n\t\t\t<Dialog.Popup\r\n\t\t\t\tdata-slot=\"dialog-content\"\r\n\t\t\t\tclassName={cn(\r\n\t\t\t\t\t'bg-background data-[open]:animate-in data-[closed]:animate-out data-[closed]:fade-out-0 data-[open]:fade-in-0 data-[closed]:zoom-out-95 data-[open]:zoom-in-95 data-[open]:duration-200 data-[closed]:duration-150 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg sm:max-w-lg',\r\n\t\t\t\t\tclassName\r\n\t\t\t\t)}\r\n\t\t\t\t{...props}\r\n\t\t\t>\r\n\t\t\t\t{children}\r\n\t\t\t\t{showCloseButton && (\r\n\t\t\t\t\t<Dialog.Close\r\n\t\t\t\t\t\tdata-slot=\"dialog-close\"\r\n\t\t\t\t\t\tclassName=\"ring-offset-background focus:ring-ring data-[open]:bg-accent data-[open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<XIcon />\r\n\t\t\t\t\t\t<span className=\"sr-only\">Close</span>\r\n\t\t\t\t\t</Dialog.Close>\r\n\t\t\t\t)}\r\n\t\t\t</Dialog.Popup>\r\n\t\t</DialogPortal>\r\n\t);\r\n}\r\n\r\nfunction DialogHeader({ className, ...props }: React.ComponentProps<'div'>) {\r\n\treturn <div data-slot=\"dialog-header\" className={cn('flex flex-col gap-2 text-center sm:text-left', className)} {...props} />;\r\n}\r\n\r\nfunction DialogFooter({ className, ...props }: React.ComponentProps<'div'>) {\r\n\treturn <div data-slot=\"dialog-footer\" className={cn('flex flex-col-reverse gap-2 sm:flex-row sm:justify-end', className)} {...props} />;\r\n}\r\n\r\nfunction DialogTitle({ className, ...props }: React.ComponentProps<typeof Dialog.Title>) {\r\n\treturn <Dialog.Title data-slot=\"dialog-title\" className={cn('text-lg leading-none font-semibold', className)} {...props} />;\r\n}\r\n\r\nfunction DialogDescription({ className, ...props }: React.ComponentProps<typeof Dialog.Description>) {\r\n\treturn <Dialog.Description data-slot=\"dialog-description\" className={cn('text-muted-foreground text-sm', className)} {...props} />;\r\n}\r\n\r\nexport { DialogRoot as Dialog, DialogClose, DialogContent, DialogDescription, DialogFooter, DialogHeader, DialogBackdrop, DialogPortal, DialogTitle, DialogTrigger };\r\n",
      "type": "registry:component"
    }
  ]
}